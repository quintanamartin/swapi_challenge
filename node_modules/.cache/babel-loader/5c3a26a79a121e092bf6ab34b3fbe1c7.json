{"ast":null,"code":"export { FILMS, CHARACTERS, getFilms, getCharacters };\nconst FILMS = 'https://swapi.co/api/films';\nconst CHARACTERS = 'https://swapi.co/api/people';\n\nfunction checkStatus(response) {\n  response.status === 200 ? console.log('Successful request!') : console.error(`Oops, we get a ${response.status} error`);\n  JSON.parse(response);\n  return response;\n}\n\nfunction getFilms(url) {\n  return fetch(url).then(checkStatus).then(json => console.log(json));\n}\n\nconst getCharacters = url => {\n  return fetch(url).then(checkStatus).then(json => console.log(json));\n};","map":{"version":3,"sources":["/home/martin/Escritorio/Programacion/lambdachallenge/src/api.js"],"names":["FILMS","CHARACTERS","getFilms","getCharacters","checkStatus","response","status","console","log","error","JSON","parse","url","fetch","then","json"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,aAAtC;AAEA,MAAMH,KAAK,GAAG,4BAAd;AACA,MAAMC,UAAU,GAAG,6BAAnB;;AAEA,SAASG,WAAT,CAAqBC,QAArB,EAA+B;AAC7BA,EAAAA,QAAQ,CAACC,MAAT,KAAoB,GAApB,GACIC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CADJ,GAEID,OAAO,CAACE,KAAR,CAAe,kBAAiBJ,QAAQ,CAACC,MAAO,QAAhD,CAFJ;AAGAI,EAAAA,IAAI,CAACC,KAAL,CAAWN,QAAX;AACA,SAAOA,QAAP;AACD;;AAED,SAASH,QAAT,CAAkBU,GAAlB,EAAuB;AACrB,SAAOC,KAAK,CAACD,GAAD,CAAL,CACJE,IADI,CACCV,WADD,EAEJU,IAFI,CAECC,IAAI,IAAIR,OAAO,CAACC,GAAR,CAAYO,IAAZ,CAFT,CAAP;AAGD;;AAED,MAAMZ,aAAa,GAAGS,GAAG,IAAI;AAC3B,SAAOC,KAAK,CAACD,GAAD,CAAL,CACJE,IADI,CACCV,WADD,EAEJU,IAFI,CAECC,IAAI,IAAIR,OAAO,CAACC,GAAR,CAAYO,IAAZ,CAFT,CAAP;AAGD,CAJD","sourcesContent":["export { FILMS, CHARACTERS, getFilms, getCharacters };\n\nconst FILMS = 'https://swapi.co/api/films';\nconst CHARACTERS = 'https://swapi.co/api/people';\n\nfunction checkStatus(response) {\n  response.status === 200\n    ? console.log('Successful request!')\n    : console.error(`Oops, we get a ${response.status} error`);\n  JSON.parse(response);\n  return response;\n}\n\nfunction getFilms(url) {\n  return fetch(url)\n    .then(checkStatus)\n    .then(json => console.log(json));\n}\n\nconst getCharacters = url => {\n  return fetch(url)\n    .then(checkStatus)\n    .then(json => console.log(json));\n};\n"]},"metadata":{},"sourceType":"module"}