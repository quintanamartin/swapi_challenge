{"ast":null,"code":"export { CHARACTERS, getCharacters };\nconst CHARACTERS = ['https://swapi.co/api/people/?page=1', 'https://swapi.co/api/people/?page=2', 'https://swapi.co/api/people/?page=3', 'https://swapi.co/api/people/?page=4', 'https://swapi.co/api/people/?page=5', 'https://swapi.co/api/people/?page=6', 'https://swapi.co/api/people/?page=7', 'https://swapi.co/api/people/?page=8', 'https://swapi.co/api/people/?page=9'];\n\nfunction checkStatus(response) {\n  response.status === 200 ? console.log('Successful request!') : console.error(`Oops, we get a ${response.status} error`);\n  return response.json();\n} // const getCharacters = url => {\n//   Promise.all(\n//     CHARACTERS.map(\n//       charactersUrl => fetch(charactersUrl).then(checkStatus)\n//       //\n//     )\n//   )\n//     .then(pages => {\n//       const allCharacters = [];\n//       pages.forEach(page => {\n//         allCharacters.push(...page.results);\n//       });\n//         return allCharacters;\n//     })\n//     .then(data => process(data));\n// };\n// function process(characters) {\n//   console.log(characters);\n// }\n\n\nconst getCharacters = urls => {\n  Promise.all(urls.map(charactersUrl => fetch(charactersUrl).then(checkStatus))).then(pages => {\n    const characters = [];\n    pages.forEach(page => {\n      characters.push(...page.results);\n    });\n    return characters;\n  }).then(characters => process(characters));\n};\n\nfunction process(characters) {\n  console.log(characters); //agarrar 2 caracteres random\n  //iterar por la propiedad \"film\" de cada caracter y fijarse los que matchean\n}","map":{"version":3,"sources":["/home/martin/Escritorio/Programacion/lambdachallenge/src/api.js"],"names":["CHARACTERS","getCharacters","checkStatus","response","status","console","log","error","json","urls","Promise","all","map","charactersUrl","fetch","then","pages","characters","forEach","page","push","results","process"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB;AAEA,MAAMD,UAAU,GAAG,CACjB,qCADiB,EAEjB,qCAFiB,EAGjB,qCAHiB,EAIjB,qCAJiB,EAKjB,qCALiB,EAMjB,qCANiB,EAOjB,qCAPiB,EAQjB,qCARiB,EASjB,qCATiB,CAAnB;;AAYA,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AAC7BA,EAAAA,QAAQ,CAACC,MAAT,KAAoB,GAApB,GACIC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CADJ,GAEID,OAAO,CAACE,KAAR,CAAe,kBAAiBJ,QAAQ,CAACC,MAAO,QAAhD,CAFJ;AAGA,SAAOD,QAAQ,CAACK,IAAT,EAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AACA,MAAMP,aAAa,GAAGQ,IAAI,IAAI;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAL,CAASC,aAAa,IAAIC,KAAK,CAACD,aAAD,CAAL,CAAqBE,IAArB,CAA0Bb,WAA1B,CAA1B,CAAZ,EACGa,IADH,CACQC,KAAK,IAAI;AACb,UAAMC,UAAU,GAAG,EAAnB;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AACpBF,MAAAA,UAAU,CAACG,IAAX,CAAgB,GAAGD,IAAI,CAACE,OAAxB;AACD,KAFD;AAGA,WAAOJ,UAAP;AACD,GAPH,EAQGF,IARH,CAQQE,UAAU,IAAIK,OAAO,CAACL,UAAD,CAR7B;AASD,CAVD;;AAWA,SAASK,OAAT,CAAiBL,UAAjB,EAA6B;AAC3BZ,EAAAA,OAAO,CAACC,GAAR,CAAYW,UAAZ,EAD2B,CAE3B;AACA;AACD","sourcesContent":["export { CHARACTERS, getCharacters };\n\nconst CHARACTERS = [\n  'https://swapi.co/api/people/?page=1',\n  'https://swapi.co/api/people/?page=2',\n  'https://swapi.co/api/people/?page=3',\n  'https://swapi.co/api/people/?page=4',\n  'https://swapi.co/api/people/?page=5',\n  'https://swapi.co/api/people/?page=6',\n  'https://swapi.co/api/people/?page=7',\n  'https://swapi.co/api/people/?page=8',\n  'https://swapi.co/api/people/?page=9'\n];\n\nfunction checkStatus(response) {\n  response.status === 200\n    ? console.log('Successful request!')\n    : console.error(`Oops, we get a ${response.status} error`);\n  return response.json();\n}\n\n// const getCharacters = url => {\n//   Promise.all(\n//     CHARACTERS.map(\n//       charactersUrl => fetch(charactersUrl).then(checkStatus)\n//       //\n//     )\n//   )\n//     .then(pages => {\n//       const allCharacters = [];\n//       pages.forEach(page => {\n//         allCharacters.push(...page.results);\n//       });\n//         return allCharacters;\n\n//     })\n//     .then(data => process(data));\n// };\n\n// function process(characters) {\n//   console.log(characters);\n// }\nconst getCharacters = urls => {\n  Promise.all(urls.map(charactersUrl => fetch(charactersUrl).then(checkStatus)))\n    .then(pages => {\n      const characters = [];\n      pages.forEach(page => {\n        characters.push(...page.results);\n      });\n      return characters;\n    })\n    .then(characters => process(characters));\n};\nfunction process(characters) {\n  console.log(characters);\n  //agarrar 2 caracteres random\n  //iterar por la propiedad \"film\" de cada caracter y fijarse los que matchean\n}\n"]},"metadata":{},"sourceType":"module"}